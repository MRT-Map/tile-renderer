on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: pypa/hatch@install
    - run: cargo install resvg usvg
    - run: hatch run python tests/test.py 9

  build:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      changelog: ${{ steps.release-info.outputs.changelog }}
      version: ${{ steps.release-info.outputs.version }}

    steps:
    - uses: actions/checkout@v4
    - uses: pypa/hatch@install
    - run: hatch build

    - id: release-info
      run: |
        {
        echo 'changelog<<__EOF__'
        python -c "
        from tile_renderer.__about__ import __version__
        print(open('CHANGELOG.md').read().split('## 0'+__version__)[1].split('\n')[1].split('\n##')[0])
        "
        echo __EOF__
        } >> "$GITHUB_OUTPUT"
        
        hatch run python -c "
        from tile_renderer.__about__ import __version__
        print('version='+__version__)
        " >> "$GITHUB_OUTPUT"
    - uses: actions/upload-artifact@v4
      with:
        name: dist-pypi
        path: dist

    - run: |
        hatch run python -c "
        from tile_renderer.skin import Skin
        from pathlib import Path
        Skin.default().save_json(Path.cwd() / 'dist')
        "
        hatch run python -c "
        import json
        from pathlib import Path
        j = json.loads((Path.cwd() / 'dist' / 'default.skin.json').read_text())
        j['font_files'] = []
        (Path.cwd() / 'dist' / 'default.nofontfiles.skin.json').write_text(json.dumps(j))
        "
    - uses: actions/upload-artifact@v4
      with:
        name: dist-github
        path: dist
  github-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-github
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.version }}
          body: ${{ needs.build.outputs.changelog }}
          files: dist/*
  pypi:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/p/tile-renderer
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-pypi
      - uses: pypa/gh-action-pypi-publish@release/v1