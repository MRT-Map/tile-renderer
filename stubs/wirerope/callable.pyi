from _typeshed import Incomplete

class _Reagent: ...

class Descriptor:
    descriptor: Incomplete
    descriptor_class: Incomplete
    def __init__(self, descriptor) -> None: ...
    def detect_function_attr_name(self): ...
    def detect_property(self, obj, type_): ...
    def detect_binder(self, obj, type_): ...

class Callable:
    wrapped_object: Incomplete
    is_function_type: Incomplete
    descriptor: Incomplete
    wrapped_callable: Incomplete
    is_wrapped_coroutine: Incomplete
    is_coroutine: Incomplete
    def __init__(self, f) -> None: ...
    def signature(self): ...
    def parameters(self): ...
    @property
    def first_parameter(self): ...
    def is_boundmethod(self): ...
    def is_descriptor(self): ...
    def is_builtin_property(self): ...
    def is_property(self): ...
    def is_barefunction(self): ...
    def is_barefunction(self): ...
    def is_member(self): ...
    def is_membermethod(self): ...
    def is_classmethod(self): ...
