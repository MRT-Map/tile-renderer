from shapely import LinearRing as LinearRing
from shapely import LineString as LineString
from shapely import Point as Point
from shapely import Polygon as Polygon
from shapely.coords import CoordinateSequence as CoordinateSequence
from shapely.errors import TopologicalError as TopologicalError

def test_empty_linearring_coords() -> None: ...
def test_linearring_from_coordinate_sequence() -> None: ...
def test_linearring_from_points() -> None: ...
def test_linearring_from_closed_linestring() -> None: ...
def test_linearring_from_unclosed_linestring() -> None: ...
def test_linearring_from_invalid() -> None: ...
def test_linearring_from_too_short_linestring() -> None: ...
def test_linearring_from_linearring() -> None: ...
def test_linearring_from_generator() -> None: ...
def test_linearring_from_empty() -> None: ...
def test_linearring_from_numpy() -> None: ...
def test_numpy_linearring_coords() -> None: ...
def test_numpy_empty_linearring_coords() -> None: ...
def test_numpy_object_array() -> None: ...
def test_polygon_from_coordinate_sequence() -> None: ...
def test_polygon_from_coordinate_sequence_with_holes() -> None: ...
def test_polygon_from_linearring() -> None: ...
def test_polygon_from_linestring() -> None: ...
def test_polygon_from_points() -> None: ...
def test_polygon_from_polygon() -> None: ...
def test_polygon_from_invalid() -> None: ...
def test_polygon_from_empty() -> None: ...
def test_polygon_from_numpy() -> None: ...
def test_polygon_from_generator() -> None: ...

class TestPolygon:
    def test_linearring(self) -> None: ...
    def test_polygon(self) -> None: ...
    def test_linearring_empty(self) -> None: ...
    def test_dimensions(self) -> None: ...
    def test_attribute_chains(self) -> None: ...
    def test_empty_equality(self) -> None: ...
    def test_from_bounds(self) -> None: ...
    def test_empty_polygon_exterior(self) -> None: ...

def test_linearring_immutable() -> None: ...

class TestLinearRingGetItem:
    def test_index_linearring(self) -> None: ...
    def test_index_linearring_misc(self) -> None: ...
    def test_slice_linearring(self) -> None: ...
