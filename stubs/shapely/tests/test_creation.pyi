from shapely import GeometryCollection as GeometryCollection
from shapely import GeometryType as GeometryType
from shapely import LinearRing as LinearRing
from shapely import LineString as LineString
from shapely import MultiLineString as MultiLineString
from shapely import MultiPoint as MultiPoint
from shapely import MultiPolygon as MultiPolygon
from shapely import Polygon as Polygon
from shapely.testing import assert_geometries_equal as assert_geometries_equal

from .common import empty_polygon as empty_polygon
from .common import geometry_collection as geometry_collection
from .common import line_string as line_string
from .common import linear_ring as linear_ring
from .common import multi_line_string as multi_line_string
from .common import multi_point as multi_point
from .common import multi_polygon as multi_polygon
from .common import point as point
from .common import polygon as polygon

def box_tpl(x1, y1, x2, y2): ...
def test_points_from_coords() -> None: ...
def test_points_from_xy() -> None: ...
def test_points_from_xyz() -> None: ...
def test_points_invalid_ndim() -> None: ...
def test_points_nan_becomes_empty() -> None: ...
def test_linestrings_from_coords() -> None: ...
def test_linestrings_from_xy() -> None: ...
def test_linestrings_from_xy_broadcast() -> None: ...
def test_linestrings_from_xyz() -> None: ...
def test_linestrings_buffer(dim) -> None: ...
def test_linestrings_invalid_shape_scalar() -> None: ...
def test_linestrings_invalid_shape(shape) -> None: ...
def test_linestrings_invalid_ndim() -> None: ...
def test_linearrings() -> None: ...
def test_linearrings_from_xy() -> None: ...
def test_linearrings_unclosed() -> None: ...
def test_linearrings_unclosed_all_coords_equal() -> None: ...
def test_linearrings_invalid_shape_scalar() -> None: ...
def test_linearrings_invalid_shape(shape) -> None: ...
def test_linearrings_invalid_ndim() -> None: ...
def test_linearrings_all_nan() -> None: ...
def test_linearrings_buffer(dim, order) -> None: ...
def test_polygon_from_linearring() -> None: ...
def test_polygons_none() -> None: ...
def test_polygons() -> None: ...
def test_polygon_no_hole_list_raises() -> None: ...
def test_polygon_no_hole_wrong_type() -> None: ...
def test_polygon_with_hole_wrong_type() -> None: ...
def test_polygon_wrong_hole_type() -> None: ...
def test_polygon_with_1_hole() -> None: ...
def test_polygon_with_2_holes() -> None: ...
def test_polygon_with_none_hole() -> None: ...
def test_2_polygons_with_same_hole() -> None: ...
def test_2_polygons_with_2_same_holes() -> None: ...
def test_2_polygons_with_different_holes() -> None: ...
def test_polygons_not_enough_points_in_shell_scalar() -> None: ...
def test_polygons_not_enough_points_in_shell(shape) -> None: ...
def test_polygons_not_enough_points_in_holes_scalar() -> None: ...
def test_polygons_not_enough_points_in_holes(shape) -> None: ...
def test_create_collection_only_none(func, expected) -> None: ...
def test_create_collection(func, sub_geom) -> None: ...
def test_create_collection_skips_none(func, sub_geom) -> None: ...
def test_create_collection_wrong_geom_type(func, sub_geom) -> None: ...
def test_box(coords, ccw, expected) -> None: ...
def test_box_array(coords, ccw, expected) -> None: ...
def test_box_nan(coords) -> None: ...
def test_prepare() -> None: ...
def test_destroy_prepared() -> None: ...
def test_empty_missing(geom_type) -> None: ...
def test_empty(geom_type) -> None: ...
