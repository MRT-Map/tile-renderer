from _typeshed import Incomplete
from shapely import MultiLineString as MultiLineString
from shapely import MultiPoint as MultiPoint
from shapely import MultiPolygon as MultiPolygon
from shapely.testing import assert_geometries_equal as assert_geometries_equal

from .common import empty_line_string as empty_line_string
from .common import empty_line_string_z as empty_line_string_z
from .common import geometry_collection as geometry_collection
from .common import line_string as line_string
from .common import line_string_z as line_string_z
from .common import linear_ring as linear_ring
from .common import multi_line_string as multi_line_string
from .common import multi_line_string_z as multi_line_string_z
from .common import multi_point as multi_point
from .common import multi_point_z as multi_point_z
from .common import multi_polygon as multi_polygon
from .common import multi_polygon_z as multi_polygon_z
from .common import point as point
from .common import point_z as point_z
from .common import polygon as polygon
from .common import polygon_z as polygon_z

all_types: Incomplete
all_types_3d: Incomplete
all_types_not_supported: Incomplete

def test_roundtrip(geom) -> None: ...
def test_include_z(geom) -> None: ...
def test_include_z_false(geom) -> None: ...
def test_include_z_default() -> None: ...
def test_raise_geometry_type(geom) -> None: ...
def test_points() -> None: ...
def test_linestrings() -> None: ...
def test_polygons() -> None: ...
def test_multipoints() -> None: ...
def test_multilinestrings() -> None: ...
def test_multipolygons() -> None: ...
def test_mixture_point_multipoint() -> None: ...
def test_mixture_linestring_multilinestring() -> None: ...
def test_mixture_polygon_multipolygon() -> None: ...
