from collections.abc import Generator

from _typeshed import Incomplete
from shapely.decorators import multithreading_enabled as multithreading_enabled
from shapely.decorators import requires_geos as requires_geos

def mocked_geos_version() -> Generator[Incomplete, None, None]: ...
def sphinx_doc_build() -> Generator[None, None, None]: ...
def test_version() -> None: ...
def test_geos_version() -> None: ...
def test_geos_capi_version() -> None: ...
def func() -> None: ...

class SomeClass:
    def func(self) -> None: ...

expected_docstring: str

def test_requires_geos_ok(version, mocked_geos_version) -> None: ...
def test_requires_geos_not_ok(version, mocked_geos_version) -> None: ...
def test_requires_geos_doc_build(
    version, mocked_geos_version, sphinx_doc_build
) -> None: ...
def test_requires_geos_method(
    version, mocked_geos_version, sphinx_doc_build
) -> None: ...
def set_first_element(value, *args, **kwargs): ...
def test_multithreading_enabled_raises_arg() -> None: ...
def test_multithreading_enabled_raises_kwarg() -> None: ...
def test_multithreading_enabled_preserves_flag() -> None: ...
def test_multithreading_enabled_ok(args, kwargs) -> None: ...
