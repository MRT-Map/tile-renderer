from _typeshed import Incomplete

def adder(augend): ...

class cadder:
    augend: Incomplete
    zero: Incomplete
    def __init__(self, augend) -> None: ...
    def __call__(self, addend): ...

class c2adder:
    augend: Incomplete
    zero: Incomplete
    def __init__(self, augend) -> None: ...
    def __call__(self, addend): ...

class basic: ...
class basic2: ...

x: int
y: int

def test_basic() -> None: ...
def test_basic_class() -> None: ...
def test_c2adder() -> None: ...
def test_pickled_cadder() -> None: ...
def test_raw_adder_and_inner() -> None: ...
def test_pickled_adder() -> None: ...
def test_pickled_inner() -> None: ...
def test_moduledict_where_not_main() -> None: ...
