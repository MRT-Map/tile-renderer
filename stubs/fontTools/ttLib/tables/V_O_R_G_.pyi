from _typeshed import Incomplete
from fontTools.misc.textTools import bytesjoin as bytesjoin
from fontTools.misc.textTools import safeEval as safeEval

from . import DefaultTable as DefaultTable

class table_V_O_R_G_(DefaultTable.DefaultTable):
    getGlyphName: Incomplete
    VOriginRecords: Incomplete
    def decompile(self, data, ttFont) -> None: ...
    numVertOriginYMetrics: Incomplete
    def compile(self, ttFont): ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...
    def __getitem__(self, glyphSelector): ...
    def __setitem__(self, glyphSelector, value) -> None: ...
    def __delitem__(self, glyphSelector) -> None: ...

class VOriginRecord:
    glyphName: Incomplete
    vOrigin: Incomplete
    def __init__(
        self, name: Incomplete | None = ..., vOrigin: Incomplete | None = ...
    ) -> None: ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...
