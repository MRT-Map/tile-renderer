from collections import UserDict

import fontTools.ttLib.tables.TupleVariation as tv
from _typeshed import Incomplete
from fontTools.misc import sstruct as sstruct
from fontTools.misc.textTools import safeEval as safeEval

from . import DefaultTable as DefaultTable

log: Incomplete
TupleVariation = tv.TupleVariation
GVAR_HEADER_FORMAT: str
GVAR_HEADER_SIZE: Incomplete

class _LazyDict(UserDict):
    data: Incomplete
    def __init__(self, data) -> None: ...
    def __getitem__(self, k): ...

class table__g_v_a_r(DefaultTable.DefaultTable):
    dependencies: Incomplete
    variations: Incomplete
    def __init__(self, tag: Incomplete | None = ...) -> None: ...
    def compile(self, ttFont): ...
    def compileGlyphs_(self, ttFont, axisTags, sharedCoordIndices): ...
    def decompile(self, data, ttFont): ...
    def ensureDecompiled(self, recurse: bool = ...) -> None: ...
    @staticmethod
    def decompileOffsets_(data, tableFormat, glyphCount): ...
    @staticmethod
    def compileOffsets_(offsets): ...
    def toXML(self, writer, ttFont) -> None: ...
    version: Incomplete
    reserved: Incomplete
    def fromXML(self, name, attrs, content, ttFont) -> None: ...
    @staticmethod
    def getNumPoints_(glyph): ...

def compileGlyph_(variations, pointCount, axisTags, sharedCoordIndices): ...
def decompileGlyph_(pointCount, sharedTuples, axisTags, data): ...
