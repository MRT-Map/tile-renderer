from collections.abc import Mapping

from _typeshed import Incomplete
from fontTools.misc import sstruct as sstruct
from fontTools.misc.textTools import bytechr as bytechr
from fontTools.misc.textTools import byteord as byteord
from fontTools.misc.textTools import strjoin as strjoin

from . import DefaultTable as DefaultTable

hdmxHeaderFormat: str

class _GlyphnamedList(Mapping):
    def __init__(self, reverseGlyphOrder, data) -> None: ...
    def __getitem__(self, k): ...
    def __len__(self) -> int: ...
    def __iter__(self): ...
    def keys(self): ...

class table__h_d_m_x(DefaultTable.DefaultTable):
    hdmx: Incomplete
    def decompile(self, data, ttFont) -> None: ...
    version: int
    recordSize: Incomplete
    numRecords: Incomplete
    def compile(self, ttFont): ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...
