from _typeshed import Incomplete
from fontTools.misc import sstruct as sstruct
from fontTools.misc.textTools import byteord as byteord
from fontTools.misc.textTools import safeEval as safeEval

from . import DefaultTable as DefaultTable

METAHeaderFormat: str
METAGlyphRecordFormat: str
METAStringRecordFormat: str
METALabelDict: Incomplete

def getLabelString(labelID): ...

class table_M_E_T_A_(DefaultTable.DefaultTable):
    dependencies: Incomplete
    glyphRecords: Incomplete
    def decompile(self, data, ttFont) -> None: ...
    nMetaRecs: Incomplete
    metaFlags: Incomplete
    def compile(self, ttFont): ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...

class GlyphRecord:
    glyphID: int
    nMetaEntry: int
    offset: int
    stringRecs: Incomplete
    def __init__(self) -> None: ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...
    def compile(self, parentTable): ...

def mapXMLToUTF8(string): ...
def mapUTF8toXML(string): ...

class StringRecord:
    def toXML(self, writer, ttFont) -> None: ...
    string: Incomplete
    def fromXML(self, name, attrs, content, ttFont) -> None: ...
    def compile(self, parentTable): ...
