from _typeshed import Incomplete
from fontTools.misc.textTools import bytesjoin as bytesjoin
from fontTools.misc.textTools import safeEval as safeEval

from . import DefaultTable as DefaultTable

class table_C_P_A_L_(DefaultTable.DefaultTable):
    NO_NAME_ID: int
    DEFAULT_PALETTE_TYPE: int
    palettes: Incomplete
    paletteTypes: Incomplete
    paletteLabels: Incomplete
    paletteEntryLabels: Incomplete
    def __init__(self, tag: Incomplete | None = ...) -> None: ...
    def decompile(self, data, ttFont) -> None: ...
    def compile(self, ttFont): ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...

class Color:
    def hex(self): ...
    def toXML(self, writer, ttFont, index: Incomplete | None = ...) -> None: ...
    @classmethod
    def fromHex(cls, value): ...
    @classmethod
    def fromRGBA(cls, red, green, blue, alpha): ...
