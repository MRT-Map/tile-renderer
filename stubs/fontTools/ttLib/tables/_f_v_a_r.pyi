from _typeshed import Incomplete
from fontTools.misc import sstruct as sstruct
from fontTools.misc.textTools import Tag as Tag
from fontTools.misc.textTools import bytesjoin as bytesjoin
from fontTools.misc.textTools import safeEval as safeEval
from fontTools.ttLib import TTLibError as TTLibError

from . import DefaultTable as DefaultTable

FVAR_HEADER_FORMAT: str
FVAR_AXIS_FORMAT: str
FVAR_INSTANCE_FORMAT: str

class table__f_v_a_r(DefaultTable.DefaultTable):
    dependencies: Incomplete
    axes: Incomplete
    instances: Incomplete
    def __init__(self, tag: Incomplete | None = ...) -> None: ...
    def compile(self, ttFont): ...
    def decompile(self, data, ttFont) -> None: ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont) -> None: ...

class Axis:
    axisTag: Incomplete
    axisNameID: int
    flags: int
    minValue: Incomplete
    defaultValue: float
    maxValue: float
    def __init__(self) -> None: ...
    def compile(self): ...
    def decompile(self, data) -> None: ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, _attrs, content, ttFont): ...

class NamedInstance:
    subfamilyNameID: int
    postscriptNameID: int
    flags: int
    coordinates: Incomplete
    def __init__(self) -> None: ...
    def compile(self, axisTags, includePostScriptName): ...
    def decompile(self, data, axisTags) -> None: ...
    def toXML(self, writer, ttFont) -> None: ...
    def fromXML(self, name, attrs, content, ttFont): ...
