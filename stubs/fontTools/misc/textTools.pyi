import ast

safeEval = ast.literal_eval

class Tag(str):
    @staticmethod
    def transcode(blob): ...
    def __new__(self, content): ...
    def __ne__(self, other): ...
    def __eq__(self, other): ...
    def __hash__(self): ...
    def tobytes(self): ...

def readHex(content): ...
def deHexStr(hexdata): ...
def hexStr(data): ...
def num2binary(l, bits: int = ...): ...
def binary2num(bin): ...
def caselessSort(alist): ...
def pad(data, size): ...
def tostr(s, encoding: str = ..., errors: str = ...): ...
def tobytes(s, encoding: str = ..., errors: str = ...): ...
def bytechr(n): ...
def byteord(c): ...
def strjoin(iterable, joiner: str = ...): ...
def bytesjoin(iterable, joiner: bytes = ...): ...
