from typing import NamedTuple

from _typeshed import Incomplete

class Transform(NamedTuple):
    xx: float
    xy: float
    yx: float
    yy: float
    dx: float
    dy: float
    def transformPoint(self, p): ...
    def transformPoints(self, points): ...
    def transformVector(self, v): ...
    def transformVectors(self, vectors): ...
    def translate(self, x: int = ..., y: int = ...): ...
    def scale(self, x: int = ..., y: Incomplete | None = ...): ...
    def rotate(self, angle): ...
    def skew(self, x: int = ..., y: int = ...): ...
    def transform(self, other): ...
    def reverseTransform(self, other): ...
    def inverse(self): ...
    def toPS(self): ...
    def __bool__(self) -> bool: ...

Identity: Incomplete

def Offset(x: int = ..., y: int = ...): ...
def Scale(x, y: Incomplete | None = ...): ...
