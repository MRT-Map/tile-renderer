from collections.abc import Generator

from _typeshed import Incomplete
from fontTools.misc.roundTools import otRound as otRound
from fontTools.misc.vector import Vector as _Vector

def calcBounds(array): ...
def calcIntBounds(array, round=...): ...
def updateBounds(bounds, p, min=..., max=...): ...
def pointInRect(p, rect): ...
def pointsInRect(array, rect): ...
def vectorLength(vector): ...
def asInt16(array): ...
def normRect(rect): ...
def scaleRect(rect, x, y): ...
def offsetRect(rect, dx, dy): ...
def insetRect(rect, dx, dy): ...
def sectRect(rect1, rect2): ...
def unionRect(rect1, rect2): ...
def rectCenter(rect): ...
def rectArea(rect): ...
def intRect(rect): ...

class Vector(_Vector):
    def __init__(self, *args, **kwargs) -> None: ...

def pairwise(iterable, reverse: bool = ...) -> Generator[Incomplete, None, None]: ...
