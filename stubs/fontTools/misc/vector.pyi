from _typeshed import Incomplete

class Vector(tuple):
    def __new__(cls, values, keep: bool = ...): ...
    def __add__(self, other): ...
    __radd__: Incomplete
    def __sub__(self, other): ...
    def __rsub__(self, other): ...
    def __mul__(self, other): ...
    __rmul__: Incomplete
    def __truediv__(self, other): ...
    def __rtruediv__(self, other): ...
    def __pos__(self): ...
    def __neg__(self): ...
    def __round__(self, *, round=...): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __bool__(self) -> bool: ...
    __nonzero__: Incomplete
    def __abs__(self): ...
    def length(self): ...
    def normalized(self): ...
    def dot(self, other): ...
    def toInt(self): ...
    @property
    def values(self): ...
    @values.setter
    def values(self, values) -> None: ...
