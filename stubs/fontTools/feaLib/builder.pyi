from _typeshed import Incomplete
from fontTools.feaLib.ast import FeatureFile as FeatureFile
from fontTools.feaLib.error import FeatureLibError as FeatureLibError
from fontTools.feaLib.lookupDebugInfo import (
    LOOKUP_DEBUG_ENV_VAR as LOOKUP_DEBUG_ENV_VAR,
)
from fontTools.feaLib.lookupDebugInfo import (
    LOOKUP_DEBUG_INFO_KEY as LOOKUP_DEBUG_INFO_KEY,
)
from fontTools.feaLib.lookupDebugInfo import LookupDebugInfo as LookupDebugInfo
from fontTools.feaLib.parser import Parser as Parser
from fontTools.feaLib.variableScalar import VariableScalar as VariableScalar
from fontTools.misc import sstruct as sstruct
from fontTools.misc.textTools import Tag as Tag
from fontTools.misc.textTools import binary2num as binary2num
from fontTools.misc.textTools import safeEval as safeEval
from fontTools.misc.textTools import tostr as tostr
from fontTools.otlLib.builder import AlternateSubstBuilder as AlternateSubstBuilder
from fontTools.otlLib.builder import ChainContextPosBuilder as ChainContextPosBuilder
from fontTools.otlLib.builder import (
    ChainContextSubstBuilder as ChainContextSubstBuilder,
)
from fontTools.otlLib.builder import ChainContextualRule as ChainContextualRule
from fontTools.otlLib.builder import (
    ClassPairPosSubtableBuilder as ClassPairPosSubtableBuilder,
)
from fontTools.otlLib.builder import CursivePosBuilder as CursivePosBuilder
from fontTools.otlLib.builder import LigatureSubstBuilder as LigatureSubstBuilder
from fontTools.otlLib.builder import MarkBasePosBuilder as MarkBasePosBuilder
from fontTools.otlLib.builder import MarkLigPosBuilder as MarkLigPosBuilder
from fontTools.otlLib.builder import MarkMarkPosBuilder as MarkMarkPosBuilder
from fontTools.otlLib.builder import MultipleSubstBuilder as MultipleSubstBuilder
from fontTools.otlLib.builder import PairPosBuilder as PairPosBuilder
from fontTools.otlLib.builder import (
    ReverseChainSingleSubstBuilder as ReverseChainSingleSubstBuilder,
)
from fontTools.otlLib.builder import SinglePosBuilder as SinglePosBuilder
from fontTools.otlLib.builder import SingleSubstBuilder as SingleSubstBuilder
from fontTools.otlLib.error import OpenTypeLibError as OpenTypeLibError
from fontTools.otlLib.maxContextCalc import maxCtxFont as maxCtxFont
from fontTools.ttLib import getTableModule as getTableModule
from fontTools.ttLib import newTable as newTable
from fontTools.ttLib.tables import otBase as otBase
from fontTools.ttLib.tables import otTables as otTables
from fontTools.varLib.builder import buildVarDevTable as buildVarDevTable
from fontTools.varLib.featureVars import (
    addFeatureVariationsRaw as addFeatureVariationsRaw,
)
from fontTools.varLib.models import normalizeValue as normalizeValue
from fontTools.varLib.varStore import OnlineVarStoreBuilder as OnlineVarStoreBuilder

log: Incomplete

def addOpenTypeFeatures(
    font, featurefile, tables: Incomplete | None = ..., debug: bool = ...
) -> None: ...
def addOpenTypeFeaturesFromString(
    font,
    features,
    filename: Incomplete | None = ...,
    tables: Incomplete | None = ...,
    debug: bool = ...,
) -> None: ...

class Builder:
    supportedTables: Incomplete
    font: Incomplete
    glyphMap: Incomplete
    varstorebuilder: Incomplete
    axes: Incomplete
    default_language_systems_: Incomplete
    script_: Incomplete
    lookupflag_: int
    lookupflag_markFilterSet_: Incomplete
    language_systems: Incomplete
    seen_non_DFLT_script_: bool
    named_lookups_: Incomplete
    cur_lookup_: Incomplete
    cur_lookup_name_: Incomplete
    cur_feature_name_: Incomplete
    lookups_: Incomplete
    lookup_locations: Incomplete
    features_: Incomplete
    required_features_: Incomplete
    feature_variations_: Incomplete
    aalt_features_: Incomplete
    aalt_location_: Incomplete
    aalt_alternates_: Incomplete
    featureNames_: Incomplete
    featureNames_ids_: Incomplete
    cv_parameters_: Incomplete
    cv_parameters_ids_: Incomplete
    cv_num_named_params_: Incomplete
    cv_characters_: Incomplete
    size_parameters_: Incomplete
    fontRevision_: Incomplete
    names_: Incomplete
    base_horiz_axis_: Incomplete
    base_vert_axis_: Incomplete
    attachPoints_: Incomplete
    ligCaretCoords_: Incomplete
    ligCaretPoints_: Incomplete
    glyphClassDefs_: Incomplete
    markAttach_: Incomplete
    markAttachClassID_: Incomplete
    markFilterSets_: Incomplete
    os2_: Incomplete
    hhea_: Incomplete
    vhea_: Incomplete
    stat_: Incomplete
    conditionsets_: Incomplete
    def __init__(self, font, featurefile) -> None: ...
    parseTree: Incomplete
    def build(self, tables: Incomplete | None = ..., debug: bool = ...) -> None: ...
    def get_chained_lookup_(self, location, builder_class): ...
    def add_lookup_to_feature_(self, lookup, feature_name) -> None: ...
    def get_lookup_(self, location, builder_class): ...
    def build_feature_aalt_(self) -> None: ...
    def build_head(self) -> None: ...
    def build_hhea(self) -> None: ...
    def build_vhea(self) -> None: ...
    def get_user_name_id(self, table): ...
    def buildFeatureParams(self, tag): ...
    def build_name(self) -> None: ...
    def build_OS_2(self) -> None: ...
    def setElidedFallbackName(self, value, location) -> None: ...
    def addDesignAxis(self, designAxis, location) -> None: ...
    def addAxisValueRecord(self, axisValueRecord, location) -> None: ...
    def build_STAT(self) -> None: ...
    def build_codepages_(self, pages): ...
    def buildBASE(self): ...
    def buildBASEAxis(self, axis): ...
    def buildGDEF(self): ...
    def buildGDEFGlyphClassDef_(self): ...
    def buildGDEFMarkAttachClassDef_(self): ...
    def buildGDEFMarkGlyphSetsDef_(self): ...
    def buildDebg(self) -> None: ...
    def buildLookups_(self, tag): ...
    def makeTable(self, tag): ...
    def makeFeatureVariations(self, table, table_tag) -> None: ...
    def any_feature_variations(self, feature_tag, table_tag): ...
    def get_lookup_name_(self, lookup): ...
    def add_language_system(self, location, script, language) -> None: ...
    def get_default_language_systems_(self): ...
    def start_feature(self, location, name) -> None: ...
    def end_feature(self) -> None: ...
    def start_lookup_block(self, location, name) -> None: ...
    def end_lookup_block(self) -> None: ...
    def add_lookup_call(self, lookup_name) -> None: ...
    def set_font_revision(self, location, revision) -> None: ...
    def set_language(self, location, language, include_default, required) -> None: ...
    def getMarkAttachClass_(self, location, glyphs): ...
    def getMarkFilterSet_(self, location, glyphs): ...
    def set_lookup_flag(self, location, value, markAttach, markFilter) -> None: ...
    def set_script(self, location, script) -> None: ...
    def find_lookup_builders_(self, lookups): ...
    def add_attach_points(self, location, glyphs, contourPoints) -> None: ...
    def add_feature_reference(self, location, featureName) -> None: ...
    def add_featureName(self, tag) -> None: ...
    def add_cv_parameter(self, tag) -> None: ...
    def add_to_cv_num_named_params(self, tag) -> None: ...
    def add_cv_character(self, character, tag) -> None: ...
    def set_base_axis(self, bases, scripts, vertical) -> None: ...
    def set_size_parameters(
        self, location, DesignSize, SubfamilyID, RangeStart, RangeEnd
    ) -> None: ...
    def add_single_subst(
        self, location, prefix, suffix, mapping, forceChain
    ) -> None: ...
    def add_multiple_subst(
        self, location, prefix, glyph, suffix, replacements, forceChain: bool = ...
    ) -> None: ...
    def add_alternate_subst(
        self, location, prefix, glyph, suffix, replacement
    ) -> None: ...
    def add_ligature_subst(
        self, location, prefix, glyphs, suffix, replacement, forceChain
    ) -> None: ...
    def add_chain_context_subst(
        self, location, prefix, glyphs, suffix, lookups
    ) -> None: ...
    def add_single_subst_chained_(self, location, prefix, suffix, mapping) -> None: ...
    def add_reverse_chain_single_subst(
        self, location, old_prefix, old_suffix, mapping
    ) -> None: ...
    def add_single_pos(self, location, prefix, suffix, pos, forceChain) -> None: ...
    def add_class_pair_pos(
        self, location, glyphclass1, value1, glyphclass2, value2
    ) -> None: ...
    def add_specific_pair_pos(
        self, location, glyph1, value1, glyph2, value2
    ) -> None: ...
    def add_cursive_pos(
        self, location, glyphclass, entryAnchor, exitAnchor
    ) -> None: ...
    def add_mark_base_pos(self, location, bases, marks) -> None: ...
    def add_mark_lig_pos(self, location, ligatures, components) -> None: ...
    def add_mark_mark_pos(self, location, baseMarks, marks) -> None: ...
    def add_chain_context_pos(
        self, location, prefix, glyphs, suffix, lookups
    ) -> None: ...
    def add_single_pos_chained_(self, location, prefix, suffix, pos) -> None: ...
    def add_marks_(self, location, lookupBuilder, marks) -> None: ...
    def add_subtable_break(self, location) -> None: ...
    def setGlyphClass_(self, location, glyph, glyphClass) -> None: ...
    def add_glyphClassDef(
        self, location, baseGlyphs, ligatureGlyphs, markGlyphs, componentGlyphs
    ) -> None: ...
    def add_ligatureCaretByIndex_(self, location, glyphs, carets) -> None: ...
    def add_ligatureCaretByPos_(self, location, glyphs, carets) -> None: ...
    def add_name_record(
        self, location, nameID, platformID, platEncID, langID, string
    ) -> None: ...
    def add_os2_field(self, key, value) -> None: ...
    def add_hhea_field(self, key, value) -> None: ...
    def add_vhea_field(self, key, value) -> None: ...
    def add_conditionset(self, key, value) -> None: ...
    def makeOpenTypeAnchor(self, location, anchor): ...
    def makeOpenTypeValueRecord(self, location, v, pairPosContext): ...
